---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glciy-worker-ubuntu
  namespace: spack
  labels:
    app: glciy
    svc: worker
    component: worker
    variant: ubuntu
spec:
  selector:
    matchLabels:
      app: glciy
      svc: worker
      component: worker
      variant: ubuntu
  replicas: 3
  template:
    metadata:
      labels:
        app: glciy
        svc: worker
        component: worker
        variant: ubuntu
    spec:
      containers:
      - name: worker
        image: "opadron/glciy-worker-ubuntu"
        imagePullPolicy: Always
        args: [
          "--queue-dir"    , "/queue",
          "--cache-dir"    , "/cache",
          "--remote"       , "git://github.com/scottwittenburg/spack",
          "--notify-url"   , "http://glciy-worker-ubuntu",
          "--poll-interval", "5" ]
        volumeMounts:
        - name: glciy
          mountPath: /queue
          subPath: queue
        - name: glciy
          mountPath: /cache
          subPath: cache
      nodeSelector:
        "beta.kubernetes.io/instance-type": "t2.medium"
      volumes:
        - name: glciy
          persistentVolumeClaim:
            claimName: glciy-ubuntu

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glciy-web-ubuntu
  namespace: spack
  labels:
    app: glciy
    svc: worker
    component: web
    variant: ubuntu
spec:
  selector:
    matchLabels:
      app: glciy
      svc: worker
      component: web
      variant: ubuntu
  replicas: 1
  template:
    metadata:
      labels:
        app: glciy
        svc: worker
        component: web
        variant: ubuntu
    spec:
      containers:
      - name: web
        image: "opadron/dws"
        imagePullPolicy: Always
        args: [
          "--queue-dir", "/queue",
          "--cache-dir", "/cache",
          "--bind",      "0.0.0.0",
          "--port",      "8080"]
        volumeMounts:
        - name: glciy
          mountPath: /queue
          subPath: queue
        - name: glciy
          mountPath: /cache
          subPath: cache
        ports:
        - name: http
          containerPort: 8080
      - name: cache-manager
        image: "opadron/scm"
        imagePullPolicy: Always
        args: [
          "5",
          "--ttl", "300", "--size-limit",   "1M", "/queue",
          "--ttl", "900", "--size-limit", "900M", "/cache",
          "--node-limit", "1", "/dummy"]
        volumeMounts:
        - name: glciy
          mountPath: /queue
          subPath: queue
        - name: glciy
          mountPath: /cache
          subPath: cache
        - name: glciy
          mountPath: /dummy
          subPath: dummy
      nodeSelector:
        "beta.kubernetes.io/instance-type": "t2.medium"
      volumes:
        - name: glciy
          persistentVolumeClaim:
            claimName: glciy-ubuntu
